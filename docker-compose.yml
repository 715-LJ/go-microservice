# docker-compose up -d
# docker-compose build --no-cache && docker-compose up -d
# docker-compose -f docker-compose.yml -f docker-compose.override.yml up -d

services:
  mesas:
    build:
      context: .
      dockerfile: ./app/mesas/cmd/api/Dockerfile
      args:
        GO_FILE: ./app/mesas/cmd/api/mesas.go
        GO_ETC: ./app/mesas/cmd/api/etc
    ports:
      - 1001
    networks:
      - api-backend
    restart: unless-stopped
    environment:
      - TZ=Asia/Shanghai

  oae:
    build:
      context: .
      dockerfile: ./app/oae/cmd/api/Dockerfile
      args:
        GO_FILE: ./app/oae/cmd/api/oae.go
        GO_ETC: ./app/oae/cmd/api/etc
    ports:
      - 1002
    networks:
      - api-backend
    restart: unless-stopped
    environment:
      - TZ=Asia/Shanghai

  # 后端代理
  nginx-api:
    image: nginx:latest
    container_name: nginx-api
    volumes:
      - ./deploy/nginx/conf.d/api.conf:/etc/nginx/conf.d/api.conf
    ports:
      - "1010:80"
    networks:
      - api-backend

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - api-backend
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 3

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: mysql@123
      MYSQL_DATABASE: microservice
      MYSQL_USER: go
      MYSQL_PASSWORD: go@123
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - api-backend
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 5s
      timeout: 3s
      retries: 5

networks:
  api-backend:
    driver: bridge

volumes:
  mysql_data:
    driver: local